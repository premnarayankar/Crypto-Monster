{"version":3,"file":"static/js/473.7265f9f8.chunk.js","mappings":"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","sources":["components/CoinsTable.jsx"],"sourcesContent":["import {\r\n  LinearProgress,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  Typography,\r\n  Pagination,\r\n  Box,\r\n} from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { CoinList } from \"../config/api\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport function numberWithCommas(x) {\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\nconst useStyles = makeStyles({\r\n  row: {\r\n    backgroundColor: \"transperant\",\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"black\",\r\n    },\r\n    fontFamily: \"Montserrat\",\r\n  },\r\n  pagination: {\r\n    \"& .MuiPaginationItem-root\": {\r\n      color: \"#00ffa1\",\r\n    },\r\n  },\r\n});\r\n\r\nconst CoinsTable = () => {\r\n  const [coins, setCoins] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n\r\n  const currency = useSelector((state) => state.crypto.value);\r\n  const symbol = useSelector((state) => state.crypto.symbol);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const classes = useStyles();\r\n\r\n  const fetchCoins = async () => {\r\n    setLoading(true);\r\n    const { data } = await axios.get(CoinList(currency));\r\n    setCoins(data);\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCoins();\r\n  }, [currency]);\r\n\r\n  const handleSearch = () => {\r\n    return coins.filter(\r\n      (coin) =>\r\n        coin.name.toLowerCase().includes(search.toLowerCase()) ||\r\n        coin.symbol.toLowerCase().includes(search.toLowerCase())\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      width={{ xs: \"98%\", sm: \"95%\", md: \"80%\" }}\r\n      mx={\"auto\"}\r\n      sx={{ textAlign: \"center\" }}\r\n    >\r\n      <Typography\r\n        variant={\"h4\"}\r\n        pt={4}\r\n        sx={{\r\n          fontFamily: \"Montserrat\",\r\n          fontSize: { xs: \"25px\", sm: \"42px\" },\r\n        }}\r\n      >\r\n        Cryptocurrency Pricess by Market Cap\r\n      </Typography>\r\n      <TextField\r\n        id=\"outlined-basic\"\r\n        label=\"Search For a Crypto Currency..\"\r\n        variant=\"outlined\"\r\n        sx={{\r\n          margin: \"20px 0\",\r\n          width: \"100%\",\r\n          borderBottom: \"1px solid white\",\r\n          \"& .MuiOutlinedInput-root\": {\r\n            color: \"white\",\r\n          },\r\n        }}\r\n        focused\r\n        onChange={(e) => setSearch(e.target.value)}\r\n      />\r\n\r\n      <TableContainer>\r\n        {loading ? (\r\n          <LinearProgress style={{ backgroundColor: \"#00ffa1\" }} />\r\n        ) : (\r\n          <Table>\r\n            <TableHead style={{ backgroundColor: \"#00ffa1\" }}>\r\n              <TableRow>\r\n                {[\"Coin\", \"Price\", \"24h Change\"].map((head) => (\r\n                  <TableCell\r\n                    sx={{\r\n                      color: \"black\",\r\n                      fontWeight: \"700\",\r\n                      fontFamily: \"Montserrat\",\r\n                    }}\r\n                    key={head}\r\n                    align={head === \"Coin\" ? \"left\" : \"right\"}\r\n                  >\r\n                    {head}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {handleSearch()\r\n                .slice((page - 1) * 10, (page - 1) * 10 + 10)\r\n                .map((row) => {\r\n                  const profit = row.price_change_percentage_24h > 0;\r\n                  return (\r\n                    <TableRow\r\n                      onClick={() => navigate(`/coins/${row.id}`)}\r\n                      className={classes.row}\r\n                      key={row.name}\r\n                      sx={{\r\n                        \"&:last-child td, &:last-child th\": { border: 0 },\r\n                      }}\r\n                    >\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                        style={{\r\n                          display: \"flex\",\r\n                          gap: 15,\r\n                        }}\r\n                      >\r\n                        <Box sx={{ display: { xs: \"none\", sm: \"block\" } }}>\r\n                          <img\r\n                            src={row?.image}\r\n                            alt={row.name}\r\n                            height=\"50\"\r\n                            style={{ marginBottom: 10 }}\r\n                          />\r\n                        </Box>\r\n                        <Box sx={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                          <span\r\n                            style={{\r\n                              textTransform: \"uppercase\",\r\n                              fontSize: 22,\r\n                              color: \"white\",\r\n                            }}\r\n                          >\r\n                            {row.symbol}\r\n                          </span>\r\n                          <span style={{ color: \"darkgrey\" }}>{row.name}</span>\r\n                        </Box>\r\n                      </TableCell>\r\n                      <TableCell\r\n                        sx={{\r\n                          color: \"white\",\r\n                          textAlign: { xs: \"center\", sm: \"right\" },\r\n                        }}\r\n                      >\r\n                        {symbol}{\" \"}\r\n                        {numberWithCommas(row.current_price.toFixed(2))}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        sx={{\r\n                          color: profit > 0 ? \"rgb(14, 203, 129)\" : \"red\",\r\n                          fontWeight: 500,\r\n                          textAlign: { xs: \"center\", sm: \"right\" },\r\n                        }}\r\n                      >\r\n                        {profit && \"+\"}\r\n                        {row.price_change_percentage_24h.toFixed(2)}%\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        )}\r\n      </TableContainer>\r\n      <Pagination\r\n        style={{\r\n          padding: 20,\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n        }}\r\n        className={classes.pagination}\r\n        count={handleSearch()?.length / 10}\r\n        onChange={(_, value) => {\r\n          setPage(value);\r\n          window.scroll(0, 450);\r\n        }}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CoinsTable;\r\n"],"names":["numberWithCommas","x","toString","replace","useStyles","makeStyles","row","backgroundColor","cursor","fontFamily","pagination","color","useState","coins","setCoins","loading","setLoading","search","setSearch","page","setPage","currency","useSelector","state","crypto","value","symbol","navigate","useNavigate","classes","fetchCoins","axios","CoinList","data","useEffect","handleSearch","filter","coin","name","toLowerCase","includes","width","xs","sm","md","mx","sx","textAlign","variant","pt","fontSize","id","label","margin","borderBottom","focused","onChange","e","target","style","map","head","fontWeight","align","slice","profit","price_change_percentage_24h","onClick","className","border","component","scope","display","gap","src","image","alt","height","marginBottom","flexDirection","textTransform","current_price","toFixed","padding","justifyContent","count","length","_","window","scroll"],"sourceRoot":""}